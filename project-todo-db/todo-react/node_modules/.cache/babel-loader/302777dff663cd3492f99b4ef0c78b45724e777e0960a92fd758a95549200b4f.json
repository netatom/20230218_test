{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\any78\\\\Desktop\\\\repo\\\\react\\\\project-todo-db\\\\todo-react\\\\src\\\\componenet\\\\Todos.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useReducer, useState } from \"react\";\nimport TodoCreate from \"./TodoCreate\";\nimport TodoList from \"./TodoList\";\nimport axios from \"axios\";\nimport { Outlet } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"create\":\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        done: false\n      }];\n    case \"remove\":\n      return state.filter(todo => todo.id !== action.id);\n    case \"toggle\":\n      return state.map(todo => todo.id === action.id ? {\n        ...todo,\n        done: !todo.done\n      } : todo);\n    case \"reset\":\n      return action.data;\n    default:\n      return state;\n  }\n}\nconst Data = () => {\n  _s();\n  const [posts, setPosts] = useState({\n    isLoading: true,\n    data: null,\n    isError: false\n  });\n  const fetchData = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/posts\");\n    setPosts({\n      isLoading: false,\n      data,\n      isError: false\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // console.log(\"데이터: \");\n  // console.log(posts.data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Data, \"ZrWFgEs/uBNoXXjExAhdcsM87SI=\");\n_c = Data;\nfunction Todos() {\n  _s2();\n  // json server start\n  const [posts, setPosts] = useState({\n    isLoading: true,\n    data: null,\n    isError: false\n  });\n  const fetchData = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/posts\");\n    setPosts({\n      isLoading: false,\n      data,\n      isError: false\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // json server end\n\n  useEffect(() => {\n    if (posts.data) {\n      posts.data.forEach(todo => {\n        dispatch({\n          type: \"create\",\n          id: todo.id,\n          text: todo.text\n        });\n      });\n    }\n  }, [posts.data]);\n  const [todos, dispatch] = useReducer(reducer, []);\n  const [text, setText] = useState(\"\");\n  const handleText = e => setText(e.target.value);\n\n  // 추가\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTodo = {\n      text,\n      done: false\n    };\n    await axios.post(\"http://localhost:5000/posts\", newTodo);\n    // reload list\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/posts\");\n    dispatch({\n      type: \"reset\",\n      data: data.map(todo => ({\n        id: todo.id,\n        text: todo.text,\n        done: false\n      }))\n    });\n    setText(\"\");\n  };\n\n  // 삭제\n  const handleRemove = async id => {\n    if (window.confirm(\"delete ok?\")) {\n      try {\n        await axios.post(`http://localhost:5000/post/delete/${id}`);\n        dispatch({\n          type: \"remove\",\n          id\n        });\n      } catch (err) {\n        console.error(\"삭제 실패:\", err);\n      }\n    }\n  };\n\n  // 토글(밑줄)\n  const handleToggle = id => dispatch({\n    type: \"toggle\",\n    id\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Data, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: handleRemove,\n      onToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoCreate, {\n      onChange: handleText,\n      onSubmit: handleSubmit,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: {\n        posts\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s2(Todos, \"sgCx1zegreXsCKTaAFnjWVcWrBk=\");\n_c2 = Todos;\nexport default Todos;\nvar _c, _c2;\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"Todos\");","map":{"version":3,"names":["useEffect","useReducer","useState","TodoCreate","TodoList","axios","Outlet","reducer","state","action","type","id","text","done","filter","todo","map","data","Data","posts","setPosts","isLoading","isError","fetchData","get","Todos","forEach","dispatch","todos","setText","handleText","e","target","value","handleSubmit","preventDefault","newTodo","post","handleRemove","window","confirm","err","console","error","handleToggle"],"sources":["C:/Users/any78/Desktop/repo/react/project-todo-db/todo-react/src/componenet/Todos.jsx"],"sourcesContent":["import { useEffect, useReducer, useState } from \"react\";\r\nimport TodoCreate from \"./TodoCreate\";\r\nimport TodoList from \"./TodoList\";\r\nimport axios from \"axios\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"create\":\r\n      return [...state, { id: action.id, text: action.text, done: false }];\r\n    case \"remove\":\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    case \"reset\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst Data = () => {\r\n  const [posts, setPosts] = useState({\r\n    isLoading: true,\r\n    data: null,\r\n    isError: false,\r\n  });\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\"http://localhost:5000/posts\");\r\n    setPosts({\r\n      isLoading: false,\r\n      data,\r\n      isError: false,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  // console.log(\"데이터: \");\r\n  // console.log(posts.data);\r\n  return <></>;\r\n};\r\n\r\nfunction Todos() {\r\n  // json server start\r\n  const [posts, setPosts] = useState({\r\n    isLoading: true,\r\n    data: null,\r\n    isError: false,\r\n  });\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\"http://localhost:5000/posts\");\r\n    setPosts({\r\n      isLoading: false,\r\n      data,\r\n      isError: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  // json server end\r\n\r\n  useEffect(() => {\r\n    if (posts.data) {\r\n      posts.data.forEach((todo) => {\r\n        dispatch({ type: \"create\", id: todo.id, text: todo.text });\r\n      });\r\n    }\r\n  }, [posts.data]);\r\n\r\n  const [todos, dispatch] = useReducer(reducer, []);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleText = (e) => setText(e.target.value);\r\n\r\n  // 추가\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newTodo = { text, done: false };\r\n    await axios.post(\"http://localhost:5000/posts\", newTodo);\r\n    // reload list\r\n    const { data } = await axios.get(\"http://localhost:5000/posts\");\r\n    dispatch({\r\n      type: \"reset\",\r\n      data: data.map(todo => ({\r\n        id: todo.id,\r\n        text: todo.text,\r\n        done: false,\r\n      }))\r\n    });\r\n    setText(\"\");\r\n  };\r\n\r\n  // 삭제\r\n  const handleRemove = async (id) => {\r\n    if (window.confirm(\"delete ok?\")) {\r\n      try {\r\n        await axios.post(`http://localhost:5000/post/delete/${id}`);\r\n        dispatch({ type: \"remove\", id });\r\n      } catch (err) {\r\n        console.error(\"삭제 실패:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // 토글(밑줄)\r\n  const handleToggle = (id) => dispatch({ type: \"toggle\", id });\r\n\r\n  return (\r\n    <div>\r\n      <Data />\r\n      <TodoList todos={todos} onRemove={handleRemove} onToggle={handleToggle} />\r\n      <TodoCreate onChange={handleText} onSubmit={handleSubmit} value={text} />\r\n      <Outlet context={{ posts }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}