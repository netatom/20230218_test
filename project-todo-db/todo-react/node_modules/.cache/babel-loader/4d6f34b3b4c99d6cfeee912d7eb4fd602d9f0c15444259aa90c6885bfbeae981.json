{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\any78\\\\Desktop\\\\repo\\\\react\\\\project-todo-db\\\\todo-react\\\\src\\\\componenet\\\\Todos.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useReducer, useRef, useState } from \"react\";\nimport TodoCreate from \"./TodoCreate\";\nimport TodoList from \"./TodoList\";\nimport axios from \"axios\";\nimport { Outlet } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"create\":\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        done: false\n      }];\n    case \"remove\":\n      return state.filter(todo => todo.id !== action.id);\n    case \"toggle\":\n      return state.map(todo => todo.id === action.id ? {\n        ...todo,\n        done: !todo.done\n      } : todo);\n    default:\n      return state;\n  }\n}\nconst Data = () => {\n  _s();\n  const [posts, setPosts] = useState({\n    isLoading: true,\n    data: null,\n    isError: false\n  });\n  const fetchData = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/posts\");\n    setPosts({\n      isLoading: false,\n      data,\n      isError: false\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log(\"data: \");\n  console.log(posts.data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n// const initialState = [\n//   { id: 1, text: \"json-text1\", done: true },\n//   { id: 2, text: \"json-text2\", done: false },\n//   { id: 3, text: \"json-text3\", done: false },\n// ];\n_s(Data, \"ZrWFgEs/uBNoXXjExAhdcsM87SI=\");\n_c = Data;\nfunction Todos() {\n  _s2();\n  // json server start\n  const [posts, setPosts] = useState({\n    isLoading: true,\n    data: null,\n    isError: false\n  });\n  const fetchData = async () => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:5000/posts\");\n    setPosts({\n      isLoading: false,\n      data,\n      isError: false\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // json server end\n\n  // var temp = posts.data;\n  // json\n  // console.log(temp);\n  // text\n  // console.log(initialState);\n  // const [todos, dispatch] = useReducer(reducer, initialState);\n  const [todos, dispatch] = useReducer(reducer, temp);\n  const [text, setText] = useState(\"\");\n  const handleText = e => setText(e.target.value);\n  const nextId = useRef(4);\n\n  // 추가\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   dispatch({ type: \"create\", id: nextId.current++, text });\n  // };\n\n  // const handleSubmit = async () => {\n  //   const { data } = await axios.post(\"http://localhost:5000/posts\", inputs);\n  //   navigate(\"/post/\", data.id);\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newTodo = {\n      id: nextId.current,\n      text,\n      done: false\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/posts\", newTodo);\n    dispatch({\n      type: \"create\",\n      id: data.id,\n      title: data.text\n    });\n    nextId.current += 1;\n    setText(\"\"); // 입력창 초기화\n  };\n\n  // 삭제\n  function handleRemove(id) {\n    if (window.confirm(\"delete ok?\")) dispatch({\n      type: \"remove\",\n      id\n    });\n  }\n\n  // 토글(밑줄)\n  const handleToggle = id => dispatch({\n    type: \"toggle\",\n    id\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Data, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: handleRemove,\n      onToggle: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoCreate, {\n      onChange: handleText,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: {\n        posts\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s2(Todos, \"3IvJEjATvtMReKwszs01B3ZhOQY=\");\n_c2 = Todos;\nexport default Todos;\nvar _c, _c2;\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"Todos\");","map":{"version":3,"names":["useEffect","useReducer","useRef","useState","TodoCreate","TodoList","axios","Outlet","reducer","state","action","type","id","text","done","filter","todo","map","Data","posts","setPosts","isLoading","data","isError","fetchData","get","console","log","Todos","todos","dispatch","temp","setText","handleText","e","target","value","nextId","handleSubmit","preventDefault","newTodo","current","post","title","handleRemove","window","confirm","handleToggle"],"sources":["C:/Users/any78/Desktop/repo/react/project-todo-db/todo-react/src/componenet/Todos.jsx"],"sourcesContent":["import { useEffect, useReducer, useRef, useState } from \"react\";\r\nimport TodoCreate from \"./TodoCreate\";\r\nimport TodoList from \"./TodoList\";\r\nimport axios from \"axios\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"create\":\r\n      return [...state, { id: action.id, text: action.text, done: false }];\r\n    case \"remove\":\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst Data = () => {\r\n  const [posts, setPosts] = useState({\r\n    isLoading: true,\r\n    data: null,\r\n    isError: false,\r\n  });\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\"http://localhost:5000/posts\");\r\n    setPosts({\r\n      isLoading: false,\r\n      data,\r\n      isError: false,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  console.log(\"data: \");\r\n  console.log(posts.data);\r\n  return <></>;\r\n};\r\n\r\n// const initialState = [\r\n//   { id: 1, text: \"json-text1\", done: true },\r\n//   { id: 2, text: \"json-text2\", done: false },\r\n//   { id: 3, text: \"json-text3\", done: false },\r\n// ];\r\n\r\nfunction Todos() {\r\n  // json server start\r\n  const [posts, setPosts] = useState({\r\n    isLoading: true,\r\n    data: null,\r\n    isError: false,\r\n  });\r\n  const fetchData = async () => {\r\n    const { data } = await axios.get(\"http://localhost:5000/posts\");\r\n    setPosts({\r\n      isLoading: false,\r\n      data,\r\n      isError: false,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  // json server end\r\n\r\n  // var temp = posts.data;\r\n  // json\r\n  // console.log(temp);\r\n  // text\r\n  // console.log(initialState);\r\n  // const [todos, dispatch] = useReducer(reducer, initialState);\r\n  const [todos, dispatch] = useReducer(reducer, temp);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleText = (e) => setText(e.target.value);\r\n  const nextId = useRef(4);\r\n\r\n  // 추가\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   dispatch({ type: \"create\", id: nextId.current++, text });\r\n  // };\r\n\r\n  // const handleSubmit = async () => {\r\n  //   const { data } = await axios.post(\"http://localhost:5000/posts\", inputs);\r\n  //   navigate(\"/post/\", data.id);\r\n  // };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newTodo = { id: nextId.current, text, done: false };\r\n    const { data } = await axios.post(\"http://localhost:5000/posts\", newTodo);\r\n    dispatch({ type: \"create\", id: data.id, title: data.text });\r\n    nextId.current += 1;\r\n    setText(\"\"); // 입력창 초기화\r\n  };\r\n\r\n\r\n  // 삭제\r\n  function handleRemove(id) {\r\n    if (window.confirm(\"delete ok?\")) dispatch({ type: \"remove\", id });\r\n  }\r\n\r\n  // 토글(밑줄)\r\n  const handleToggle = (id) => dispatch({ type: \"toggle\", id });\r\n\r\n  return (\r\n    <div>\r\n      <Data />\r\n      <TodoList todos={todos} onRemove={handleRemove} onToggle={handleToggle} />\r\n      <TodoCreate onChange={handleText} onSubmit={handleSubmit} />\r\n      <Outlet context={{ posts }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}